public class Password authority(root) {
    private LArray[{}] userList;
    private LArray[{root:}] passwdList;
    int {} n = 3;

    public Password{}() {
        userList = new LArray[{}](n);
        passwdList = new LArray[{root:}](n);
        try {
            userList.setAt(0, "alice");
            userList.setAt(1, "bob");
            userList.setAt(2, "carol");

            passwdList.setAt(0, "hgoehuq");
            passwdList.setAt(1, "7qobho2=");
            passwdList.setAt(2, "!%OXe05t");
        }
	catch (ArrayIndexOutOfBoundsException ignored) { }
	catch (ArrayStoreException ignored) { }
	catch (NullPointerException ignored) { }
    }

    public boolean{username;password;this; _<-_} 
    checkPwd{this}(String username, String password) where authority(root) {
	LArray[{}] {this; _<-_} userList = this.userList;
        if (userList == null) return false;
        
        int{username} userID = -1;
        
        try {
            for (int i = 0; i < n; i++)
            if (username == userList.getAt(i))
                userID = i;
        } catch (IndexOutOfBoundsException e) {
            return false;
        }
        
        if (userID < 0) return false;
        
        // pc gets higher now
        
        boolean result = false;
    
        LArray[{root:}]{this} passwdList = this.passwdList;
        if (passwdList != null) {
            try {
                result = passwdList.getAt(userID) == password;
            } catch (IndexOutOfBoundsException e) {
                result = false;
            }
        }
        return declassify(result, {username; password; this; _<-_});
    }
}