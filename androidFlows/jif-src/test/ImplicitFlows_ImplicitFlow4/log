/home/estudiante/eule/androidFlows/jif-src/test/ImplicitFlows_ImplicitFlow4/ImplicitFlow4-out.jif:41: 
    Unsatisfiable constraint
    	general constraint:
    		actual_arg_2 <= formal_arg_2
    	in this context:
    		{Alice->; _<-_ ⊔ caller_pc} <= {}
    	cannot satisfy equation:
    		{Alice->} ⊑ {}
    	in environment:
    		{this} ⊑ {caller_pc}
    		[]

    Label Descriptions
    ------------------
     - actual_arg_2 = the label of the 2nd actual argument
     - actual_arg_2 = {Alice->; _<-_ ⊔ caller_pc}
     - formal_arg_2 = the upper bound of the formal argument msg
     - formal_arg_2 = {}
     - caller_pc = The pc at the call site of this method (bounded above by 
    {})
     - this = label of the special variable "this" in test.ImplicitFlow4

    The label of the actual argument, actual_arg_2, is more restrictive than 
    the label of the formal argument, formal_arg_2.
            if (passwordCorrect) Log.i("INFO", "password correct"); else Log.i("INFO", "password not correct");
                                               ^----------------^

/home/estudiante/eule/androidFlows/jif-src/test/ImplicitFlows_ImplicitFlow4/ImplicitFlow4-out.jif:48: 
    Unsatisfiable constraint
    	general constraint:
    		X.n join X.r join Li <= Lr
    	in this context:
    		{password ⊔ username ⊔ caller_pc} <= {caller_pc}
    	cannot satisfy equation:
    		{password} ⊑ {caller_pc}
    	in environment:
    		{this} ⊑ {caller_pc}
    		[]

    Label Descriptions
    ------------------
     - X.n = information that may be gained by the body terminating normally
     - X.n = 0
     - X.r = information that may be gained by exiting the body with a return
     statement
     - X.r = {password ⊔ username ⊔ caller_pc}
     - Li = Lower bound for method output
     - Li = test.ImplicitFlow4.provider
     - Lr = return label of the method
     - Lr = {caller_pc}
     - 0 = pseudo-label representing a path that cannot be taken
     - password = polymorphic label of formal argument password of method 
    lookup (bounded above by {Alice->})
     - username = polymorphic label of formal argument username of method 
    lookup (bounded above by {Alice->})
     - caller_pc = The pc at the call site of this method (bounded above by 
    {Alice->})
     - this = label of the special variable "this" in test.ImplicitFlow4

    The method return label, Lr, is an upper bound on how much information 
    can be gained by observing that this method terminates normally (i.e., 
    terminates without throwing an exception). The method body may reveal 
    more information than this. The return label of a method is declared 
    after the variables, e.g. "void m(int i):{Lr}".
    private boolean {Alice:}lookup{Alice:}(String {Alice:}username, String {Alice:}password) throws Exception {
            ^--------------------^

/home/estudiante/eule/androidFlows/jif-src/test/ImplicitFlows_ImplicitFlow4/ImplicitFlow4-out.jif:48: 
    Unsatisfiable constraint
    	general constraint:
    		X.n join X.r join Li <= Lr
    	in this context:
    		{password ⊔ username ⊔ caller_pc} <= {caller_pc}
    	cannot satisfy equation:
    		{username} ⊑ {caller_pc}
    	in environment:
    		{this} ⊑ {caller_pc}
    		[]

    Label Descriptions
    ------------------
     - X.n = information that may be gained by the body terminating normally
     - X.n = 0
     - X.r = information that may be gained by exiting the body with a return
     statement
     - X.r = {password ⊔ username ⊔ caller_pc}
     - Li = Lower bound for method output
     - Li = test.ImplicitFlow4.provider
     - Lr = return label of the method
     - Lr = {caller_pc}
     - 0 = pseudo-label representing a path that cannot be taken
     - password = polymorphic label of formal argument password of method 
    lookup (bounded above by {Alice->})
     - username = polymorphic label of formal argument username of method 
    lookup (bounded above by {Alice->})
     - caller_pc = The pc at the call site of this method (bounded above by 
    {Alice->})
     - this = label of the special variable "this" in test.ImplicitFlow4

    The method return label, Lr, is an upper bound on how much information 
    can be gained by observing that this method terminates normally (i.e., 
    terminates without throwing an exception). The method body may reveal 
    more information than this. The return label of a method is declared 
    after the variables, e.g. "void m(int i):{Lr}".
    private boolean {Alice:}lookup{Alice:}(String {Alice:}username, String {Alice:}password) throws Exception {
            ^--------------------^

/home/estudiante/eule/androidFlows/jif-src/test/ImplicitFlows_ImplicitFlow4/ImplicitFlow4-out.jif:48: 
    Unsatisfiable constraint
    	general constraint:
    		exc_NullPointerException <= decl_exc_Exception
    	in this context:
    		{username ⊔ caller_pc} <= {caller_pc}
    	cannot satisfy equation:
    		{username} ⊑ {caller_pc}
    	in environment:
    		{this} ⊑ {caller_pc}
    		[]

    Label Descriptions
    ------------------
     - exc_NullPointerException = upper bound on information that may be 
    gained by observing the method throwing the exception 
    NullPointerException
     - exc_NullPointerException = {username ⊔ caller_pc}
     - decl_exc_Exception = declared upper bound on information that may be 
    gained by observing the method throwing the exception Exception
     - decl_exc_Exception = {caller_pc}
     - username = polymorphic label of formal argument username of method 
    lookup (bounded above by {Alice->})
     - caller_pc = The pc at the call site of this method (bounded above by 
    {Alice->})
     - this = label of the special variable "this" in test.ImplicitFlow4

    More information may be gained by observing a java.lang.Exception 
    exception than is permitted by the method/constructor signature
    private boolean {Alice:}lookup{Alice:}(String {Alice:}username, String {Alice:}password) throws Exception {
            ^--------------------^

/home/estudiante/eule/androidFlows/jif-src/test/ImplicitFlows_ImplicitFlow4/ImplicitFlow4-out.jif:48: 
    Unsatisfiable constraint
    	general constraint:
    		exc_NullPointerException <= decl_exc_Exception
    	in this context:
    		{password ⊔ username ⊔ caller_pc} <= {caller_pc}
    	cannot satisfy equation:
    		{password} ⊑ {caller_pc}
    	in environment:
    		{this} ⊑ {caller_pc}
    		[]

    Label Descriptions
    ------------------
     - exc_NullPointerException = upper bound on information that may be 
    gained by observing the method throwing the exception 
    NullPointerException
     - exc_NullPointerException = {password ⊔ username ⊔ caller_pc}
     - decl_exc_Exception = declared upper bound on information that may be 
    gained by observing the method throwing the exception Exception
     - decl_exc_Exception = {caller_pc}
     - password = polymorphic label of formal argument password of method 
    lookup (bounded above by {Alice->})
     - username = polymorphic label of formal argument username of method 
    lookup (bounded above by {Alice->})
     - caller_pc = The pc at the call site of this method (bounded above by 
    {Alice->})
     - this = label of the special variable "this" in test.ImplicitFlow4

    More information may be gained by observing a java.lang.Exception 
    exception than is permitted by the method/constructor signature
    private boolean {Alice:}lookup{Alice:}(String {Alice:}username, String {Alice:}password) throws Exception {
            ^--------------------^

/home/estudiante/eule/androidFlows/jif-src/test/ImplicitFlows_ImplicitFlow4/ImplicitFlow4-out.jif:48: 
    Unsatisfiable constraint
    	general constraint:
    		exc_NullPointerException <= decl_exc_Exception
    	in this context:
    		{password ⊔ username ⊔ caller_pc} <= {caller_pc}
    	cannot satisfy equation:
    		{username} ⊑ {caller_pc}
    	in environment:
    		{this} ⊑ {caller_pc}
    		[]

    Label Descriptions
    ------------------
     - exc_NullPointerException = upper bound on information that may be 
    gained by observing the method throwing the exception 
    NullPointerException
     - exc_NullPointerException = {password ⊔ username ⊔ caller_pc}
     - decl_exc_Exception = declared upper bound on information that may be 
    gained by observing the method throwing the exception Exception
     - decl_exc_Exception = {caller_pc}
     - password = polymorphic label of formal argument password of method 
    lookup (bounded above by {Alice->})
     - username = polymorphic label of formal argument username of method 
    lookup (bounded above by {Alice->})
     - caller_pc = The pc at the call site of this method (bounded above by 
    {Alice->})
     - this = label of the special variable "this" in test.ImplicitFlow4

    More information may be gained by observing a java.lang.Exception 
    exception than is permitted by the method/constructor signature
    private boolean {Alice:}lookup{Alice:}(String {Alice:}username, String {Alice:}password) throws Exception {
            ^--------------------^

6 errors.
