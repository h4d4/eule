package test;

import java.util.LinkedList;
import test.Activity;
import android.content.Context;
import android.os.Bundle;
import test.SmsManager;
import android.telephony.TelephonyManager;
import test.R;
import jif.runtime.Runtime;

/**
 * @testcase_name ObjectSensitivity1
 * @version 0.1
 * @author Secure Software Engineering Group (SSE), European Center for Security and Privacy by Design (EC SPRIDE) 
 * @author_mail siegfried.rasthofer@cased.de
 * 
 * @description Two lists are created, a tainted value is added to one of them while a constant string is added to the other one.
 *  The first element of the list with the untainted object is sent to a sink.
 * @dataflow -
 * @number_of_leaks 0
 * @challenges the analysis must be able to distinguish between two objects of the same type that are initialized by the same constructor.
 */
public class ObjectSensitivity1 extends Activity {
static Context context;
//    @Override
    protected void onCreate{}(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout);
        LinkedList<String> list1 = new LinkedList<String>();
        LinkedList<String> list2 = new LinkedList<String>();
        TelephonyManager {Alice:}telephonyManager = (TelephonyManager) context.getSystemService(Context.TELEPHONY_SERVICE);
        list1.add(telephonyManager.getSimSerialNumber());
        list2.add("123");
        SmsManager sms = SmsManager.getDefault();
        sms.sendTextMessage("+49 1234", null, list2.get(0), null, null);
    }
}
